a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
print(c)


# 列表切片
# 切片（slice）运算符同样适用于对列表：

# t = ['a', 'b', 'c', 'd', 'e', 'f']
# t[1:3]
# ['b', 'c']
# t[:4]
# ['a', 'b', 'c', 'd']
# t[3:]
# ['d', 'e', 'f']
# 如果你省略第一个索引，切片将从列表头开始。如果你省略第二个索引，切片将会到列表尾结束。 所以如果你两者都省略，切片就是整个列表的一个拷贝。


# s = 'pining for the fjords'
# t = s.split()
# print(t)

def bad_delete_head(t):
    t = t[1:]              # 错的！

t4 = [1, 2, 3]

bad_delete_head(t4)

print(t4)








# 术语表
# 列表（list）:
# 多个值组成的序列。
# 元素（element）:
# 列表（或序列）中的一个值，也称为项。
# 嵌套列表（nested list）:
# 作为另一个列表的元素的列表。
# 累加器（accumulator）:
# 循环中用于相加或累积出一个结果的变量。
# 增量赋值语句（augmented assignment）:
# 一个使用类似 += 操作符来更新一个变量的值的语句。
# 归并（reduce）:
# 遍历序列，将所有元素求和为一个值的处理模式。
# 映射（map）:
# 遍历序列，对每个元素执行操作的处理模式。
# 筛选（filter）:
# 遍历序列，选出满足一定标准的元素的处理模式。
# 对象（object）:
# 变量可以指向的东西。一个对象有数据类型和值。
# 相等（equivalent）:
# 有相同的值。
# 相同（identical）:
# 是同一个对象（隐含着相等）。
# 引用（reference）:
# 一个变量和它的值之间的关联。
# 别名使用:
# 两个或者两个以上变量指向同一个对象的情况。
# 分隔符（delimiter）:
# 一个用于指示字符串分割位置的字符或者字符串。