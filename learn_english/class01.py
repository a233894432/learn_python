# coding=utf-8
"""
术语表
函数（function）：
执行某种有用运算的命名语句序列。函数可以接受形参，也可以不接受；可以返回一个结果，也可以不返回。
函数定义（function definition）：
创建一个新函数的语句，指定了函数名、形参以及所包含的语句。
函数对象（function object）：
函数定义所创建的一个值。函数名是一个指向函数对象的变量。
函数头（header）：
函数定义的第一行。
函数体（body）：
函数定义内部的语句序列。
形参（parameters）：
函数内部用于指向被传作实参的值的名字。
函数调用（function call）：
运行一个函数的语句。它包括了函数名，紧随其后的实参列表，实参用圆括号包围起来。
实参（argument）：
函数调用时传给函数的值。这个值被赋给函数中相对应的形参。
局部变量（local variable）：
函数内部定义的变量。局部变量只能在函数内部使用。
返回值（return value）：
函数执行的结果。如果函数调用被用作表达式，其返回值是这个表达式的值。
有返回值函数（fruitful function）：
会返回一个值的函数。
无返回值函数（void function）：
总是返回None的函数。
None：
无返回值函数返回的一个特殊值。
模块（module）：
包含了一组相关函数及其他定义的的文件。
导入语句（import statement）：
读取一个模块文件，并创建一个模块对象的语句。
模块对象（module object）：
导入语句创建的一个值，可以让开发者访问模块内部定义的值。
点标记法（dot notation）：
调用另一个模块中函数的语法，需要指定模块名称，之后跟着一个点（句号）和函数名。
组合（composition）：
将一个表达式嵌入一个更长的表达式，或者是将一个语句嵌入一个更长语句的一部分。
执行流程（flow of execution）：
语句执行的顺序。
堆栈图（stack diagram）：
一种图形化表示堆栈的方法，堆栈中包括函数、函数的变量及其所指向的值。
栈帧（frame）：
堆栈图中一个栈帧，代表一个函数调用。其中包含了函数的局部变量和形参。
回溯（traceback）：
当出现异常时，解释器打印出的出错时正在执行的函数列表。
"""

"""
术语表
方法（method）：
与对象相关联的函数，并使用点标记法（dot notation）调用。
循环（loop）：
程序中能够重复执行的那部分代码。
封装（encapsulation）：
将一个语句序列转换成函数定义的过程。
泛化（generalization）：
使用某种可以算是比较通用的东西（像变量和形参），替代某些没必要那么具体的东西（像一个数字）的过程。
关键字实参（keyword argument）：
包括了形参名称作为“关键字”的实参。
接口（interface）：
对如何使用一个函数的描述，包括函数名、参数说明和返回值。
重构（refactoring）：
修改一个正常运行的函数，改善函数接口及其他方面代码质量的过程。
开发计划（development plan）：
编写程序的一种过程。
文档字符串（docstring）：
出现在函数定义顶部的一个字符串，用于记录函数的接口。
先决条件（preconditions）：
在函数运行之前，调用者应该满足的要求。 ends.
后置条件（postconditions）：
函数终止之前应该满足的条件。
"""